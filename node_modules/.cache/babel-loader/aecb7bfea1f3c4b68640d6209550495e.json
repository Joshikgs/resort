{"ast":null,"code":"var _jsxFileName = \"/Users/joshik/Desktop/resort project/resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); // \n\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pet: false\n    };\n\n    this.formatData = items => {\n      let tempItems = items.map(item => {\n        let id = item.sys.id;\n        let images = item.fields.images.map(image => image.fields.file.url);\n        let room = { ...item.fields,\n          images,\n          id\n        };\n        return room;\n      });\n      return tempItems;\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = e => {\n      const target = e.target;\n      const value = e.type === 'checkbox' ? target.checked : target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; // all rooms\n\n      let tempRooms = [...rooms]; //transform value to number if necessary\n\n      capacity = parseInt(capacity, 10);\n      price = parseInt(price, 10); // filter by type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(room => room.price));\n    let maxSize = Math.max(...rooms.map(room => room.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer; // HOC function\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/joshik/Desktop/resort project/resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pet","formatData","tempItems","map","item","id","sys","images","fields","image","file","url","room","getRoom","slug","tempRooms","find","handleChange","e","target","value","checked","name","setState","filterRooms","pets","parseInt","filter","componentDidMount","featured","Math","max","size","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data'\n\n\nconst RoomContext = React.createContext()\n// \nexport default class RoomProvider extends Component {\n    state = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        type: \"all\",\n        capacity: 1,\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pet: false\n\n    }\n\n    componentDidMount(){\n        let rooms = this.formatData(items)\n        let featuredRooms = rooms.filter(room => room.featured === true)\n        let maxPrice = Math.max(...rooms.map(room => room.price))\n        let maxSize = Math.max(...rooms.map(room => room.size))\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: rooms,\n            loading: false,\n            price: maxPrice,\n            maxPrice,\n            maxSize\n\n        })\n    }\n\n    formatData = (items) => {\n        let tempItems = items.map(item => {\n            let id = item.sys.id\n            let images = item.fields.images.map(image => image.fields.file.url)\n            let room = {...item.fields, images, id}\n            return room\n        })\n        return tempItems\n    }\n\n    getRoom = (slug) => {\n        let tempRooms = [...this.state.rooms]\n        const room = tempRooms.find(room => room.slug === slug)\n        return room\n    }\n\n    handleChange = (e) => {\n        const target = e.target\n        const value = e.type === 'checkbox' ? target.checked : target.value\n        const name = e.target.name\n        \n        this.setState({\n            [name]: value\n        },this.filterRooms)\n    }\n\n    filterRooms = () => {\n        let {rooms, type, capacity, price, minSize, maxSize, breakfast, pets} = this.state\n        // all rooms\n        let tempRooms = [...rooms]\n        //transform value to number if necessary\n        capacity = parseInt(capacity, 10)\n        price = parseInt(price, 10)\n\n        // filter by type\n        if (type !== \"all\"){\n            tempRooms = tempRooms.filter(room => room.type === type)\n        }\n\n        // filter by capacity\n        if (capacity !== 1){\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n        }\n        this.setState({\n            sortedRooms: tempRooms\n        })\n    }\n\n    render() {\n        return (\n            <RoomContext.Provider value={{\n                ...this.state,\n                getRoom: this.getRoom,\n                handleChange: this.handleChange\n                }}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer\n\n// HOC function\nexport function withRoomConsumer(Component){\n    return function ConsumerWrapper(props){\n        return (\n            <RoomConsumer>\n                {value => <Component {...props} context={value}/>}\n            </RoomConsumer>\n        )\n    }\n}\n\nexport{RoomProvider, RoomConsumer, RoomContext}"]},"metadata":{},"sourceType":"module"}